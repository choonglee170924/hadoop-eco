PREHOOK: query: CREATE EXTERNAL TABLE tables
(
id int,
db_id int,
name STRING,
type STRING,
#### A masked pattern was here ####
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
"hive.sql.database.type" = "DERBY",
"hive.sql.jdbc.url" = "jdbc:derby:;databaseName=${test.tmp.dir}/junit_metastore_db;create=true",
"hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
"hive.sql.query" = "SELECT TBL_ID, DB_ID, TBL_NAME, TBL_TYPE, OWNER FROM TBLS",
#### A masked pattern was here ####
"hive.sql.dbcp.maxActive" = "1"
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tables
POSTHOOK: query: CREATE EXTERNAL TABLE tables
(
id int,
db_id int,
name STRING,
type STRING,
#### A masked pattern was here ####
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
"hive.sql.database.type" = "DERBY",
"hive.sql.jdbc.url" = "jdbc:derby:;databaseName=${test.tmp.dir}/junit_metastore_db;create=true",
"hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
"hive.sql.query" = "SELECT TBL_ID, DB_ID, TBL_NAME, TBL_TYPE, OWNER FROM TBLS",
#### A masked pattern was here ####
"hive.sql.dbcp.maxActive" = "1"
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tables
PREHOOK: query: CREATE EXTERNAL TABLE dbs
(
id int,
name STRING
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
"hive.sql.database.type" = "DERBY",
"hive.sql.jdbc.url" = "jdbc:derby:;databaseName=${test.tmp.dir}/junit_metastore_db;create=true",
"hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
"hive.sql.query" = "SELECT DB_ID, NAME FROM DBS",
"hive.sql.column.mapping" = "id=DB_ID, name=NAME",
"hive.sql.dbcp.maxActive" = "1"
)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dbs
POSTHOOK: query: CREATE EXTERNAL TABLE dbs
(
id int,
name STRING
)
STORED BY 'org.apache.hive.storage.jdbc.JdbcStorageHandler'
TBLPROPERTIES (
"hive.sql.database.type" = "DERBY",
"hive.sql.jdbc.url" = "jdbc:derby:;databaseName=${test.tmp.dir}/junit_metastore_db;create=true",
"hive.sql.jdbc.driver" = "org.apache.derby.jdbc.EmbeddedDriver",
"hive.sql.query" = "SELECT DB_ID, NAME FROM DBS",
"hive.sql.column.mapping" = "id=DB_ID, name=NAME",
"hive.sql.dbcp.maxActive" = "1"
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dbs
PREHOOK: query: select tables.name as tn, dbs.name as dn, tables.type as t
from tables join dbs on (tables.db_id = dbs.id) order by tn, dn, t
PREHOOK: type: QUERY
PREHOOK: Input: default@dbs
PREHOOK: Input: default@tables
#### A masked pattern was here ####
POSTHOOK: query: select tables.name as tn, dbs.name as dn, tables.type as t
from tables join dbs on (tables.db_id = dbs.id) order by tn, dn, t
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dbs
POSTHOOK: Input: default@tables
#### A masked pattern was here ####
alltypesorc	default	MANAGED_TABLE
cbo_t1	default	MANAGED_TABLE
cbo_t2	default	MANAGED_TABLE
cbo_t3	default	MANAGED_TABLE
dbs	default	EXTERNAL_TABLE
lineitem	default	MANAGED_TABLE
part	default	MANAGED_TABLE
src	default	MANAGED_TABLE
src1	default	MANAGED_TABLE
src_cbo	default	MANAGED_TABLE
src_json	default	MANAGED_TABLE
src_sequencefile	default	MANAGED_TABLE
src_thrift	default	MANAGED_TABLE
srcbucket	default	MANAGED_TABLE
srcbucket2	default	MANAGED_TABLE
srcpart	default	MANAGED_TABLE
tables	default	EXTERNAL_TABLE
PREHOOK: query: explain
select
  t1.name as a, t2.key as b
from
  (select 1 as db_id, tables.name from tables) t1
  join
  (select distinct key from src) t2
  on (t2.key-1) = t1.db_id
order by a,b
PREHOOK: type: QUERY
POSTHOOK: query: explain
select
  t1.name as a, t2.key as b
from
  (select 1 as db_id, tables.name from tables) t1
  join
  (select distinct key from src) t2
  on (t2.key-1) = t1.db_id
order by a,b
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 5 <- Map 4 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: tables
                  Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                  Select Operator
                    expressions: name (type: string)
                    outputColumnNames: _col1
                    Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                    Reduce Output Operator
                      key expressions: 1.0 (type: double)
                      sort order: +
                      Map-reduce partition columns: 1.0 (type: double)
                      Statistics: Num rows: 1 Data size: 0 Basic stats: PARTIAL Column stats: NONE
                      value expressions: _col1 (type: string)
            Execution mode: llap
            LLAP IO: no inputs
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (key - 1) is not null (type: boolean)
                    Statistics: Num rows: 500 Data size: 43500 Basic stats: COMPLETE Column stats: COMPLETE
                    Group By Operator
                      keys: key (type: string)
                      mode: hash
                      outputColumnNames: _col0
                      Statistics: Num rows: 205 Data size: 17835 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 205 Data size: 17835 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: llap
            LLAP IO: no inputs
        Reducer 2 
            Execution mode: llap
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                keys:
                  0 1.0 (type: double)
                  1 (_col0 - 1) (type: double)
                outputColumnNames: _col1, _col2
                Statistics: Num rows: 225 Data size: 19618 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col1 (type: string), _col2 (type: string)
                  outputColumnNames: _col0, _col1
                  Statistics: Num rows: 225 Data size: 19618 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string)
                    sort order: ++
                    Statistics: Num rows: 225 Data size: 19618 Basic stats: COMPLETE Column stats: NONE
        Reducer 3 
            Execution mode: llap
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string)
                outputColumnNames: _col0, _col1
                Statistics: Num rows: 225 Data size: 19618 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  Statistics: Num rows: 225 Data size: 19618 Basic stats: COMPLETE Column stats: NONE
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Reducer 5 
            Execution mode: llap
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 205 Data size: 17835 Basic stats: COMPLETE Column stats: COMPLETE
                Reduce Output Operator
                  key expressions: (_col0 - 1) (type: double)
                  sort order: +
                  Map-reduce partition columns: (_col0 - 1) (type: double)
                  Statistics: Num rows: 205 Data size: 17835 Basic stats: COMPLETE Column stats: COMPLETE
                  value expressions: _col0 (type: string)

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select
  t1.name as a, t2.key as b
from
  (select 1 as db_id, tables.name from tables) t1
  join
  (select distinct key from src) t2
  on (t2.key-1) = t1.db_id
order by a,b
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@tables
#### A masked pattern was here ####
POSTHOOK: query: select
  t1.name as a, t2.key as b
from
  (select 1 as db_id, tables.name from tables) t1
  join
  (select distinct key from src) t2
  on (t2.key-1) = t1.db_id
order by a,b
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@tables
#### A masked pattern was here ####
alltypesorc	2
cbo_t1	2
cbo_t2	2
cbo_t3	2
dbs	2
lineitem	2
part	2
src	2
src1	2
src_cbo	2
src_json	2
src_sequencefile	2
src_thrift	2
srcbucket	2
srcbucket2	2
srcpart	2
tables	2
PREHOOK: query: show tables
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: show tables
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
alltypesorc
cbo_t1
cbo_t2
cbo_t3
dbs
lineitem
part
src
src1
src_cbo
src_json
src_sequencefile
src_thrift
srcbucket
srcbucket2
srcpart
tables
PREHOOK: query: describe tables
PREHOOK: type: DESCTABLE
PREHOOK: Input: default@tables
POSTHOOK: query: describe tables
POSTHOOK: type: DESCTABLE
POSTHOOK: Input: default@tables
id                  	string              	from deserializer   
db_id               	string              	from deserializer   
name                	string              	from deserializer   
type                	string              	from deserializer   
#### A masked pattern was here ####
